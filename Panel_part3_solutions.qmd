---
title: "Solutions"
format:
  html:
    code-fold: true
    code-tools: true
output: 
  html_document:
    toc: true
    toc_float: true
    toc_depth: 2
    number_sections: true
author:
  - name: Tobias Rüttenauer
    orcid: 	0000-0001-5747-9735
    email: t.ruttenauer@ucl.ac.uk
    url: https://ruettenauer.github.io/
    affiliations:
      - name: UCL Social Research Institute
        address: University College London
        city: London WC1H 0AL
---

### Required packages

```{r, message = FALSE, warning = FALSE, results = 'hide'}
pkgs <- c("plm", "feisr", "sandwich", "did", "texreg", "tidyr", "haven", "dplyr", "ggplot2", "ggforce") 
lapply(pkgs, require, character.only = TRUE)
```

### Session info

```{r}
sessionInfo()

```
  
### Load data

For the purpose of this exercise, we will use a real-world data set. However, instead of constructing our own data, we use a shortcut and use data from the replication package of @Hospido.2012. The replication package can be found [here](http://qed.econ.queensu.ca/jae/datasets/hospido001/).

THis is an unbalanced panel with 32,066 observations and 2066 individuals for the period 1968–1993 of the PSID. It consists of male heads aged 25–55 with at least 9 years of usable wages data.


```{r}
# Load stata file
data.df <- read_dta("_data/h-data.dta")

# Lets order this
names <- names(data.df)
names <- c("pid", "year", names[-which(names %in% c("pid", "year"))])
data.df <- data.df[, names]

data.df <- data.df[order(data.df$pid, data.df$year), ]

```


| variable name   |   description|
|-----------------|-------------------------------------------------------|
| pid             |   INDIVIDUAL IDENTIFIER|
| year            |   YEAR OF INTERVIEW|
| age             |   AGE OF INDIVIDUAL|
| white           |   WHITE DUMMY|
| dropout         |   DROPOUT DUMMY|
| grad            |   GRADUATE DUMMY|
| college         |   COLLEGE DUMMY|
| married         |   MARRIED DUMMY|
| child           |   NUMBER OF CHILDREN|
| fsize           |   FAMILY SIZE|
| hours           |   YEARLY HOURS OF WORK|
| logwages        |   LOG OF REAL ANNUAL WAGES|
| changejob       |   JOB CHANGE DUMMY|
| ten1            |   TENURE DUMMY less than a year|
| ten2            |   TENURE DUMMY a year|
| ten3            |   TENURE DUMMY 2-3 years|
| ten4            |   TENURE DUMMY 4 through 9 years|
| ten5            |   TENURE DUMMY 10 through 19 years|
| ten6            |   TENURE DUMMY 20 years or more|
| profes          |   PROFESSIONAL, TECHNICAL, AND KINDRED WORKERS DUMMY|
| admin           |   MANAGERS AND ADMINISTRATORS DUMMY|
| sales           |   CLERICAL AND SALES WORKERS DUMMY|
| crafts          |   CRAFTSMAN AND KINDRED WORKERS DUMMY|
| operat          |   OPERATIVES WORKERS DUMMY|
| servic          |   LABORERS AND SERVICES WORKERS DUMMY|
| smsa            |   SMSA (Standard Metropolitan Statistical Area) DUMMY|
| neast           |   NORTH-EAST DUMMY|
| ncentr          |   NORTH-CENTRAL DUMMY|
| south           |   SOUTH DUMMY|
| west            |   WEST DUMMY|



# Exercise 1

Can we use this dataset to replicate our earlier analysis on the marital wage premium? What might be a problem here?

```{r}
### Lets check if variable are time-varying or constant

lapply(data.df, FUN = function(x) mean(ave(x, data.df$pid, FUN = sd)))
```

The variable married is time-constant and does not have any within-person variance. This is somehow not very useful, as marital status obviously is not a time-constant trait.

# Exercise 2

However, we do something similar: is there a fatherhood wage premium? In other words, do men experience an increase in wages when they become fathers?

    * Restrict the age at the start (first wage) to people aged 25-35
    
```{r}
data.df <- data.df[order(data.df$pid, data.df$year), ] # just to be sure

# Person year number
data.df$pynr <- ave(data.df$year,
                data.df$pid,
                FUN = function(x) 1:length(x))

# Age at first wave
data.df$f_age <- ifelse(data.df$pynr == 1, data.df$age, NA)

# Distribute across individual, using mean and na.rm = TRUE
data.df$f_age <- ave(data.df$f_age,
                     data.df$pid,
                     FUN = function(x) mean(x, na.rm = TRUE))

table(data.df$f_age)

# Restrict
data.df <- data.df[data.df$f_age <= 35,]
```
    

    * Use number of children to construct a binary indicator of wether the is a child in the household or not
    
```{r}
data.df$child_hh <- ifelse(data.df$child > 0, 1, 0)

table(data.df$child, data.df$child_hh)
```
    
    * Make sure we start only with men who are not yet fathers.
    
```{r}
# Child status at first wave
data.df$f_child_hh <- ifelse(data.df$pynr == 1, data.df$child_hh, NA)
table(data.df$f_child_hh) # More than 1,500 individuals are already child_hh from the start on

# Distribute across individual, using mean and na.rm = TRUE
data.df$f_child_hh <- ave(data.df$f_child_hh,
                         data.df$pid,
                         FUN = function(x) mean(x, na.rm = TRUE))

table(data.df$f_child_hh)

# Drop those who are child_hh from the start
data.df <- data.df[data.df$f_child_hh == 0, ]
```

__Note: this feels like dropping a lot of information! However, it makes sense if we want to correctly identify the effect of interest.__

    * Do we need to drop observations where people go from child to no child?
    
```{r}
data.df <- data.df[order(data.df$pid, data.df$year), ]

# Change in child status within an id
data.df$fd_child_hh <- ave(data.df$child_hh,
                          data.df$pid,
                          FUN = function(x) x - dplyr::lag(x, 1, default = 0)) # 0 instead of NA for 1st year

table(data.df$fd_child_hh)

# There are indeed people going from child to "no child"
# It might be that children leave the households, or parents get divorced?

# One should usually look into this more carefully, but here let's just drop those observations.


# Mark observations starting with a negative fd value (jump from marry=1 to marry =0)
data.df$notstag_child_hh <- ave(ifelse(data.df$fd_child_hh == -1, 1, 0),
                               data.df$pid,
                               FUN = function(x) cumsum(x))
table(data.df$notstag_child_hh)

# Drop after "loosing a child"
data.df <- data.df[data.df$notstag_child_hh == 0, ]
table(data.df$fd_child_hh)
```    

    * Calculate the effect of having a child on th wage of men (including controls if reasonable). 
    
    * Calculate effects for POLS, RE, and FE (if you have some extra time, also FEIS). (#Hint: feis needs a class `data.frame` as input data)
    
```{r}
# Age intervals
int <- seq(25, max(data.df$age), 5)
data.df$age_gr <- cut(data.df$age, int, include.lowest = TRUE)

# Formula with controls
fm <- as.formula(logwages ~ child_hh + 
                   hours + age_gr +
                   profes + admin  + sales + crafts + operat + servic  + 
                   smsa   +
                   ten1 + ten2 + ten3 + ten4 + ten5 + ten6)

### POLS
mod.lm <- lm(fm, data = data.df)

### RE
mod.re <- plm(fm, data = data.df,
              index = c("pid", "year"),
              effect = "twoways", model = "random")

### FE
mod.fe <- plm(fm, data = data.df,
              index = c("pid", "year"),
              effect = "twoways", model = "within")

### FEIS
# GIven that we have a relatively large T, we can actually use the 5 tenure dummies here
mod.feis <- feis(logwages ~ child_hh + 
                   hours + age_gr +
                   profes + admin  + sales + crafts + operat + servic  + 
                   smsa + 
                   as.factor(year) | ten1 + ten2 + ten3 + ten4 + ten5 + ten6, # Note we add year manually here
                data = data.frame(data.df),
                id = c("pid"), robust = TRUE) # we use the cluster-robust SEs right away

```
    
    
    * Compare using cluster robust standard errors (and screenreg).

```{r}
### Cluster robust SEs for RE and FE
vcov.re <- vcovHC(mod.re, cluster = "group", method = "arellano", type = "HC3")

vcov.fe <- vcovHC(mod.fe, cluster = "group", method = "arellano", type = "HC3")

# Plug into model object
mod.re$vcov <- vcov.re
mod.fe$vcov <- vcov.fe


### Compare
screenreg(list(mod.lm, mod.re, mod.fe, mod.feis), digits = 3,
          custom.model.names = c("POLS", "RE", "FE", "FEIS"), 
          include.groups = FALSE, # don't know why include.groups = FALSE is necessary here
          omit.coef = "year") 
```
  
* Interpret the results 

We can interpret the results above as follows:

POLS and RE: Observations with at least one child in the household tend to have higher annual wages

FE: If men become fathers, this increases their annual wage by ~ 4%. The effect is significant (would be highly significant without cluster robust SEs).

FEIS: Given the heterogeneous wage trajectories, if men become fathers, this increases their annual wage by ~ 5%. 

In this case, FEIS estimates a higher premium than FE. This could indicate that those with steeper wage trajectories actually are less likely to get children or get their children later.

Do you know why FEIS has a lower $N$ than the other models?

  
   * Try to perform a placebo test: what happens if you use the "lead" of becoming father. Why is this an interesting test?
   
```{r}
data.df <- data.df[order(data.df$pid, data.df$year), ]

# Lag 
data.df$lag_child_hh <- ave(data.df$child_hh,
                            data.df$pid,
                            FUN = function(x) lag(x, 2)) # lets use two years

# Lead
data.df$lead_child_hh <- ave(data.df$child_hh,
                             data.df$pid,
                             FUN = function(x) lead(x, 2)) # lets use two years

### Estimate FE models
lag.fe <- plm(logwages ~ lag_child_hh + 
                   hours + age_gr +
                   profes + admin  + sales + crafts + operat + servic  + 
                   smsa   +
                   ten1 + ten2 + ten3 + ten4 + ten5 + ten6, 
              data = data.df,
              index = c("pid", "year"),
              effect = "twoways", model = "within")

lead.fe <- plm(logwages ~ lead_child_hh + 
                   hours + age_gr +
                   profes + admin  + sales + crafts + operat + servic  + 
                   smsa   +
                   ten1 + ten2 + ten3 + ten4 + ten5 + ten6, 
               data = data.df,
              index = c("pid", "year"),
              effect = "twoways", model = "within")

# Compare
screenreg(list(lag.fe, lead.fe), digits = 3,
          custom.coef.map = list(lag_child_hh = "Lag Child", 
                              lead_child_hh = "Lead Child"))
```

Interestingly we already see a significant and non-trivial fatherhood effect on the wage two years before the future father actually become fathers.

If we observe a treatment effect for a treatment that has not yet happened, this might indicate either 1) anticipation effects, or 2) that something is actually confounding our treatment (e.g. selection on pre-treatment trends)

What do you think, what might be happening here?

# Exercise 3

Can we use one of the new event-study approaches, such as the Callaway and SantAnna estimator?

* Preprocess data (treatment group and timing indicator)

```{r}
# treatment timing = year if child in household
data.df$treat_timing <- ifelse(data.df$child_hh == 1, data.df$year, NA)

# Define those who never have a child
data.df$tmp <- ave(data.df$child_hh,
                   data.df$pid,
                   FUN = function(x) mean(x, na.rm = TRUE))

data.df$never_child <- ifelse(data.df$tmp == 0, 1, 0)

# set never treated to zero
data.df$treat_timing[data.df$never_child == 1] <- 0

# if married is not NA, used min year per id (removing NAs)
oo <- which(!is.na(data.df$child_hh))
data.df$treat_timing[oo] <- ave(data.df$treat_timing[oo],
                                data.df$pid[oo],
                                FUN = function(x) min(x, na.rm = TRUE))


head(data.df[, c("pid", "year", "child_hh", "never_child", "treat_timing")], n = 35)
```

* Estimate the model using `att_gt`

```{r, warning=FALSE}
# estimate group-time average treatment effects using att_gt method
wages.attgt <- att_gt(yname = "logwages",
                      tname = "year",
                      idname = "pid",
                      gname = "treat_timing",
                      xformla = ~ hours + age_gr,
                      data = data.df,
                      allow_unbalanced_panel = TRUE,
                      control_group = "notyettreated",
                      est_method = "ipw"
                        )
```



```{r}
# Show the group-time specific estimates
wages.dyn <- aggte(wages.attgt, type = "dynamic", na.rm = TRUE,
                   min_e = -3, max_e = 6)
summary(wages.dyn)

zp3 <- ggdid(wages.dyn) 
  
zp3 <- zp3 + 
  geom_hline(yintercept = 0, colour = gray(1/2), lty = 2) +
  geom_vline(xintercept = -0.5, colour = "black", lty = 1)

zp3
```

* Interpret the results 

The event-time results above again tell a little different story. First, hose getting father already have a little higher wage two and three years before they become fathers. Then, there is a negative anticipation effect in the year before birth (why could this be plausible?). After birth of the first child, fathers' wages increase significantly more then the wages of non-fathers (however, this is not much more than the effect in year -3).


# References
  